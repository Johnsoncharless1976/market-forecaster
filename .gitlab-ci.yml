# File: .gitlab-ci.yml
# Title: Stage 1 CI Audit — Exec report + fail on violations
# Commit Notes:
# - Add audit stage that runs exec_audit_summary.py and ci_guard_stage1.py
# - Publishes REPORT_EXEC.md and summary.csv as build artifacts
# - Uses masked GitLab CI variables for Snowflake (no secrets in code)
# - Triggers on main and Merge Request pipelines

image: python:3.11

variables:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PYTHONUNBUFFERED: "1"
  # Set these in GitLab ➜ Settings ➜ CI/CD ➜ Variables (masked+protected):
  # SNOWFLAKE_ACCOUNT
  # SNOWFLAKE_USER
  # SNOWFLAKE_PASSWORD
  # SNOWFLAKE_ROLE
  # SNOWFLAKE_WAREHOUSE
  # SNOWFLAKE_DATABASE
  # SNOWFLAKE_SCHEMA
  # (optional) SNOWFLAKE_STMT_TIMEOUT, SNOWFLAKE_QUERY_TAG, JOB

stages: [audit]

cache:
  key: "$CI_JOB_IMAGE"
  paths:
    - .cache/pip

before_script:
  - python --version
  - pip install --upgrade pip
  - pip install -r vscode_snowflake_starter/requirements.txt

stage1:audit:
  stage: audit
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - mkdir -p audit_exports
    - python vscode_snowflake_starter/src/exec_audit_summary.py
    - python vscode_snowflake_starter/src/ci_guard_stage1.py
  artifacts:
    when: always
    expire_in: 14 days
    paths:
      - audit_exports/stage1_exec_*/REPORT_EXEC.md
      - audit_exports/stage1_exec_*/summary.csv
