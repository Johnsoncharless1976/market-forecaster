# .gitlab-ci.yml â€” ZenMarket Forecaster CI/CD (perf/chopguard-v0.2.1)
# Purpose: Run Stage-1 audit in CI, install deps incl. Snowflake, align artifact paths,
# and pass EXEC_READY to downstream via dotenv.

default:
  image: python:3.11
  variables:
    PIP_DISABLE_PIP_VERSION_CHECK: "1"
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    PYTHONPATH: "$CI_PROJECT_DIR/vscode_snowflake_starter/src"
  cache:
    key: "${CI_JOB_IMAGE}"
    paths:
      - .cache/pip
  before_script:
    - python --version
    - pip install --upgrade pip
    # Ensure all deps, and guarantee snowflake connector is present
    - pip install --upgrade -r vscode_snowflake_starter/requirements.txt snowflake-connector-python
    - echo "PYTHONPATH=$PYTHONPATH"

stages:
  - exec
  - reports

audit_cli:
  stage: exec
  script:
    - python -c "import os; print('PYTHONPATH=', os.environ.get('PYTHONPATH')); import snowflake; print('snowflake import OK')"
    - python vscode_snowflake_starter/src/exec_audit_summary.py
    - echo "EXEC_READY=true" > exec.env
  artifacts:
    when: always
    paths:
      - "vscode_snowflake_starter/audit_exports/stage1_exec_*/REPORT_EXEC.md"
      - "vscode_snowflake_starter/audit_exports/stage1_exec_*/summary.csv"
    reports:
      dotenv: exec.env
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_BRANCH == "perf/chopguard-v0.2.1"'
      when: on_success
    - when: manual

publish_exec_report:
  stage: reports
  needs: ["audit_cli"]
  script:
    - echo "EXEC_READY=$EXEC_READY"
    - test "$EXEC_READY" = "true"
    - echo "Listing exported artifacts:"
    - ls -al
    - ls -R vscode_snowflake_starter/audit_exports || true
    - echo "Publish step complete."
  dependencies:
    - audit_cli
  artifacts:
    when: always
    paths:
      - "vscode_snowflake_starter/audit_exports/"
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_BRANCH == "perf/chopguard-v0.2.1"'
      when: on_success
    - when: manual
