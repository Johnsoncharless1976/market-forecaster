# -----------------------------
# Stage: reports (Slack notify)
# -----------------------------
slack_audit_summary:
  stage: reports
  needs: ["audit_cli"]     # pulls audit artifacts into this job
  when: always
  allow_failure: true      # Slack hiccups won't fail the pipeline
  before_script: []        # keep it lightweight (no pip)
  rules:
    - if: '$CI_COMMIT_BRANCH == "perf/chopguard-v0.2.1"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - |
      if [ -z "$SLACK_WEBHOOK_AUDIT" ]; then
        echo "SLACK_WEBHOOK_AUDIT not set; skipping Slack post."
        exit 0
      fi

      # Resolve the latest audit dir (artifacts are available via `needs`)
      AUDIT_DIR="${AUDIT_DIR:-$(ls -dt vscode_snowflake_starter/audit_exports/stage1_exec_* 2>/dev/null | head -1)}"
      SUMMARY="${AUDIT_DIR}/summary.csv"
      REPORT="${AUDIT_DIR}/REPORT_EXEC.md"

      if [ ! -f "$SUMMARY" ]; then
        echo "No summary.csv found; nothing to post."
        exit 0
      fi

      GAPS=$(awk -F, '$1=="weekday_gaps"{print $2}' "$SUMMARY")
      STATUS="âœ… OK"
      [ "${GAPS:-0}" -gt 0 ] && STATUS="ðŸš¨ GAPS=$GAPS"

      # Take a small preview of the report to keep Slack tidy
      PREVIEW=$(head -n 10 "$REPORT" | sed 's/"/\\"/g')

      # Build Slack message (mrkdwn)
      read -r -d '' PAYLOAD <<JSON || true
      {
        "text": "ZenMarket Audit â€” $STATUS",
        "blocks": [
          { "type": "header", "text": { "type": "plain_text", "text": "ZenMarket Audit â€” $STATUS" } },
          { "type": "section",
            "fields": [
              { "type": "mrkdwn", "text": "*Project:*\n$CI_PROJECT_PATH" },
              { "type": "mrkdwn", "text": "*Branch:*\n$CI_COMMIT_BRANCH" },
              { "type": "mrkdwn", "text": "*Pipeline:*\n<$CI_PIPELINE_URL|#$CI_PIPELINE_ID>" },
              { "type": "mrkdwn", "text": "*Commit:*\n<$CI_PROJECT_URL/-/commit/$CI_COMMIT_SHA|${CI_COMMIT_SHORT_SHA:-$CI_COMMIT_SHA}>" }
            ]
          },
          { "type": "section",
            "text": { "type": "mrkdwn", "text": "*Report preview:*\n```$PREVIEW\n...```" }
          }
        ]
      }
      JSON

      curl -sS -X POST -H 'Content-type: application/json' \
        --data "$PAYLOAD" "$SLACK_WEBHOOK_AUDIT" || true
