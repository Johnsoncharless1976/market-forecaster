# .gitlab-ci.yml — ZenMarket AI / ZenFactory scheduled runs
# - Supports Windows shell runners (PowerShell) via job: roadmap_windows
# - Supports Docker/Linux runners (PowerShell Core image) via job: roadmap_linux_pwsh
# - Create two Schedules in GitLab UI: 08:40 ET and 12:30 ET (Mon–Fri)
# - Set all secrets as CI/CD Variables (masked): ANTHROPIC_API_KEY, SNOWFLAKE_*, NOTION_*, SLACK_WEBHOOK_URL1..3, etc.

stages: [setup, roadmap]

default:
  interruptible: true
  cache:
    key: "$CI_PROJECT_NAME-pip-cache"
    paths:
      - .venv/
      - .cache/pip
    policy: pull-push
  artifacts:
    when: always
    expire_in: 14 days
    paths:
      - audit_exports/**
      - output/**
      - logs/**
      - vscode_snowflake_starter/audit_exports/**

variables:
  PIP_CACHE_DIR: ".cache/pip"
  ZENFACTORY_MODE: "ROADMAP"
  MAX_STEPS: "10"
  AUTO_NEXT: "1"
  # You can override ANTHROPIC_MODEL at the project/group level if desired:
  ANTHROPIC_MODEL: "claude-3-haiku-20240307"

# -------------------------------------------
# Windows self-hosted runner (shell = PowerShell)
# Requires a runner registered with tag: windows
# -------------------------------------------
roadmap_windows:
  stage: roadmap
  tags: ["windows"]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$RUN_FACTORY_MANUALLY == "1"'   # allow manual trigger via variable
  script:
    # 1) Create/refresh .env from CI variables (only write keys that exist)
    - |
      $keys = @(
        "ANTHROPIC_API_KEY","ANTHROPIC_MODEL",
        "SNOWFLAKE_ACCOUNT","SNOWFLAKE_USER","SNOWFLAKE_PASSWORD","SNOWFLAKE_PRIVATE_KEY_PATH","SNOWFLAKE_PRIVATE_KEY_PASSPHRASE",
        "SNOWFLAKE_WAREHOUSE","SNOWFLAKE_DATABASE","SNOWFLAKE_SCHEMA","SNOWFLAKE_ROLE",
        "SLACK_WEBHOOK_URL","SLACK_WEBHOOK_URL1","SLACK_WEBHOOK_URL2","SLACK_WEBHOOK_URL3",
        "NOTION_TOKEN","NOTION_AUDIT_DB_ID","NOTION_DAILY_DB_ID","NOTION_PROMPT_DB_ID",
        "BAND_PCT","HIT_BAND_BPS","POLYGON_API_KEY"
      )
      $lines = @()
      foreach($k in $keys){ $v = [Environment]::GetEnvironmentVariable($k); if($v){ $lines += "$k=$v" } }
      if($lines.Count -gt 0){ $lines -join "`n" | Set-Content -Path .env -Encoding UTF8 }
      Write-Host "Wrote .env with $($lines.Count) keys"

    # 2) Run the 10-step roadmap (hands-free)
    - |
      $env:ZENFACTORY_MODE="ROADMAP"
      $env:MAX_STEPS="10"
      $env:AUTO_NEXT="1"
      if (Test-Path .\start-zenfactory.ps1) {
        pwsh -NoProfile -File .\start-zenfactory.ps1
      } else {
        pwsh -NoProfile -File .\zenfactory-10x.ps1
      }

# ----------------------------------------------------------
# Docker/Linux runner using Microsoft PowerShell image + Python
# Works on shared runners with Docker executor (no Windows req)
# ----------------------------------------------------------
roadmap_linux_pwsh:
  stage: roadmap
  image: mcr.microsoft.com/powershell:7.4-ubuntu-22.04
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$RUN_FACTORY_MANUALLY == "1"'
  before_script:
    # Install Python and venv tools for your repo's scripts
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python3 python3-venv python3-pip ca-certificates && rm -rf /var/lib/apt/lists/*
  script:
    # 1) Create/refresh .env from CI variables (only write keys that exist)
    - |
      pwsh -NoLogo -NoProfile -Command @'
      $keys = @(
        "ANTHROPIC_API_KEY","ANTHROPIC_MODEL",
        "SNOWFLAKE_ACCOUNT","SNOWFLAKE_USER","SNOWFLAKE_PASSWORD","SNOWFLAKE_PRIVATE_KEY_PATH","SNOWFLAKE_PRIVATE_KEY_PASSPHRASE",
        "SNOWFLAKE_WAREHOUSE","SNOWFLAKE_DATABASE","SNOWFLAKE_SCHEMA","SNOWFLAKE_ROLE",
        "SLACK_WEBHOOK_URL","SLACK_WEBHOOK_URL1","SLACK_WEBHOOK_URL2","SLACK_WEBHOOK_URL3",
        "NOTION_TOKEN","NOTION_AUDIT_DB_ID","NOTION_DAILY_DB_ID","NOTION_PROMPT_DB_ID",
        "BAND_PCT","HIT_BAND_BPS","POLYGON_API_KEY"
      )
      $lines = @()
      foreach($k in $keys){ $v = [Environment]::GetEnvironmentVariable($k); if($v){ $lines += "$k=$v" } }
      if($lines.Count -gt 0){ $lines -join "`n" | Set-Content -Path .env -Encoding UTF8 }
      Write-Host "Wrote .env with $($lines.Count) keys"
      '@
    # 2) Run the 10-step roadmap (hands-free) with pwsh
    - |
      pwsh -NoLogo -NoProfile -Command @'
      $env:ZENFACTORY_MODE = "ROADMAP"
      $env:MAX_STEPS = "10"
      $env:AUTO_NEXT = "1"
      if (Test-Path "./start-zenfactory.ps1") {
        ./start-zenfactory.ps1
      } else {
        ./zenfactory-10x.ps1
      }
      '@