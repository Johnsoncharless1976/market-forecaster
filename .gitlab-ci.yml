# .gitlab-ci.yml

stages:
  - test
  - forecast
  - deploy

# -----------------------
# Stage 1: Tests (example)
# -----------------------
unit_tests:
  stage: test
  image: python:3.11-slim
  script:
    - pip install -r requirements.txt
    - pytest -v
  artifacts:
    when: always
    paths:
      - tests/reports/
    expire_in: 7 days

# -----------------------
# Stage 4 Forecast Job
# -----------------------
stage4_forecast:
  stage: forecast
  image: python:3.11-slim
  before_script:
    - pip install -r requirements.txt
  script:
    - python src/stage4_forecast.py
    - |
      python - <<'EOF'
      import smtplib, os
      from email.mime.text import MIMEText

      with open("out/forecast.txt", "r", encoding="utf-8") as f:
          forecast = f.read()

      msg = MIMEText(forecast, "plain", "utf-8")
      msg["Subject"] = "ðŸ“Œ ZeroDay Zen SPY Forecast"
      msg["From"] = os.environ["EMAIL_USER"]
      msg["To"] = os.environ["EMAIL_TO"]

      server = smtplib.SMTP(os.environ["SMTP_SERVER"], int(os.environ["SMTP_PORT"]))
      server.starttls()
      server.login(os.environ["EMAIL_USER"], os.environ["EMAIL_PASS"])
      server.sendmail(os.environ["EMAIL_USER"], [os.environ["EMAIL_TO"]], msg.as_string())
      server.quit()
      EOF
  artifacts:
    paths:
      - out/forecast.json
      - out/forecast.txt
    expire_in: 7 days
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

# -----------------------
# Stage 3: Deploy (example)
# -----------------------
deploy_prod:
  stage: deploy
  image: alpine:latest
  script:
    - echo "Deploying applicationâ€¦"
  only:
    - main
