# .gitlab-ci.yml â€” ZenMarket Forecaster Cloud Pipeline
# Purpose: Daily market data ingestion, forecast generation, and email delivery
# Schedule: 08:40 ET weekdays for morning operations

stages: [data_collection, forecasting, delivery]

default:
  image: python:3.9
  interruptible: true
  cache:
    key: "$CI_PROJECT_NAME-pip-cache"
    paths:
      - .cache/pip
    policy: pull-push
  artifacts:
    when: always
    expire_in: 14 days
    paths:
      - audit_exports/**
      - output/**
      - logs/**

variables:
  PIP_CACHE_DIR: ".cache/pip"
  PYTHONPATH: "$CI_PROJECT_DIR/src"

# Morning Operations - Schedule at 08:40 ET weekdays
morning_operations:
  stage: data_collection
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_TYPE == "MORNING"'
    - if: '$RUN_MORNING_MANUALLY == "1"'
  script:
    - echo "=== ENVIRONMENT SETUP ==="
    - python --version
    - pip --version
    - echo "Installing requirements..."
    - pip install -r requirements.txt
    
    - echo "=== NEWS INGESTION ==="
    - |
      if [ -f "src/news_ingestion.py" ]; then
        python src/news_ingestion.py || echo "Warning: News ingestion failed"
      else
        echo "Warning: news_ingestion.py not found"
      fi
    
    - echo "=== MARKET DATA INGESTION ==="
    - |
      if [ -f "src/data_ingestion.py" ]; then
        python src/data_ingestion.py
      elif [ -f "src/data_ingestion_spy.py" ]; then
        python src/data_ingestion_spy.py
        python src/data_ingestion_vix.py
        python src/data_ingestion_es.py
      else
        echo "Error: No data ingestion script found"
        exit 1
      fi
    
    - echo "=== FORECAST GENERATION ==="
    - |
      if [ -f "src/zen_council.py" ]; then
        python src/zen_council.py
      elif [ -f "src/forecast_engine.py" ]; then
        python src/forecast_engine.py
      elif [ -f "src/Forecast Engine.py" ]; then
        python "src/Forecast Engine.py"
      else
        echo "Warning: No forecast script found"
      fi
    
    - echo "=== MORNING EMAIL DELIVERY ==="
    - |
      if [ -f "src/send_am_kneeboard.py" ]; then
        python src/send_am_kneeboard.py || echo "Warning: Email delivery failed"
      else
        echo "Warning: send_am_kneeboard.py not found"
      fi
    
    - echo "=== AUDIT SUMMARY ==="
    - |
      mkdir -p audit_exports/pipeline/$(date +%Y%m%d_%H%M%S)
      echo "Pipeline execution completed at $(date)" > audit_exports/pipeline/$(date +%Y%m%d_%H%M%S)/PIPELINE_SUMMARY.txt
      ls -la src/ > audit_exports/pipeline/$(date +%Y%m%d_%H%M%S)/files_found.txt

# Evening Operations - Schedule at 17:30 ET weekdays
evening_operations:
  stage: delivery
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_TYPE == "EVENING"'
    - if: '$RUN_EVENING_MANUALLY == "1"'
  script:
    - echo "=== EVENING DATA UPDATE ==="
    - pip install -r requirements.txt
    - python src/data_ingestion.py || echo "Evening data update completed"
    
    - echo "=== PERFORMANCE ANALYSIS ==="
    - |
      if [ -f "src/forecast_grading.py" ]; then
        python src/forecast_grading.py || echo "Performance analysis completed"
      fi
    
    - echo "=== EVENING EMAIL ==="
    - |
      if [ -f "src/send_pm_kneeboard.py" ]; then
        python src/send_pm_kneeboard.py || echo "Evening email completed"
      fi

# Manual data ingestion job (for testing)
manual_ingestion:
  stage: data_collection
  rules:
    - if: '$RUN_INGESTION_ONLY == "1"'
  script:
    - pip install -r requirements.txt
    - python src/data_ingestion.py

# Automated news infrastructure development
news_infrastructure_build:
  stage: data_collection
  rules:
    - if: '$BUILD_NEWS_SYSTEM == "1"'
  script:
    - pip install feedparser requests pandas
    - echo "=== NEWS FEED TESTING ==="
    - python src/news_feed_tester.py || echo "Feed testing completed"
    - echo "=== BUILDING NEWS INGESTION SYSTEM ==="
    - python src/build_news_system.py
    - echo "=== TESTING NEWS INTEGRATION ==="
    - python src/test_news_integration.py
    - echo "News infrastructure development completed"