stages:
  - exec
  - reports

# make pip caching faster between jobs
cache:
  key: "python:3.11"
  paths:
    - .cache/pip

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

audit_cli:
  stage: exec
  image: python:3.11
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'   # allow manual runs from UI
      when: on_success
    - if: '$CI_COMMIT_BRANCH'              # run on branches if triggered
      when: manual
  before_script:
    - python --version
    - pip install --upgrade pip
    - pip install -r vscode_snowflake_starter/requirements.txt
    # ensure local imports like "from snowflake_conn import get_conn" work
    - export PYTHONPATH="$PYTHONPATH:$CI_PROJECT_DIR/vscode_snowflake_starter/src"
  script:
    - echo "=== EXEC STAGE STARTING ==="
    - mkdir -p audit_exports
    - python vscode_snowflake_starter/src/exec_audit_summary.py
    - echo "EXEC_READY=true" > exec.env
    - echo "=== EXEC STAGE COMPLETE ==="
  artifacts:
    when: always
    paths:
      - "**/audit_exports/stage1_exec_*/REPORT_EXEC.md"
      - "**/audit_exports/stage1_exec_*/summary.csv"
    expire_in: 7 days
  artifacts:reports:
    # keep a simple artifact index visible in UI
    dotenv: exec.env

publish_exec_report:
  stage: reports
  needs: ["audit_cli"]
  script:
    - echo "EXEC_READY=${EXEC_READY:-missing}"
    - echo "Listing artifacts under project root:"
    - ls -R || true
